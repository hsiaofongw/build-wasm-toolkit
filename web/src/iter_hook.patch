diff --git a/lib/sha256.c b/lib/sha256.c
index fe7c5446da..d6720198ce 100644
--- a/lib/sha256.c
+++ b/lib/sha256.c
@@ -289,6 +289,8 @@ static const uint32_t sha256_round_constants[64] = {
 #define F2(A,B,C) ( ( A & B ) | ( C & ( A | B ) ) )
 #define F1(E,F,G) ( G ^ ( E & ( F ^ G ) ) )
 
+void on_sha256_block_process_iter(uint32_t num_iter, const struct sha256_ctx *ctx);
+
 /* Process LEN bytes of BUFFER, accumulating context into CTX.
    It is assumed that LEN % 64 == 0.
    Most of this code comes from GnuPG's cipher/sha1.c.  */
@@ -334,6 +336,7 @@ sha256_process_block (const void *buffer, size_t len, struct sha256_ctx *ctx)
                                      D += t1;  H = t0 + t1; \
                                } while(0)
 
+  uint32_t num_iters = 0;
   while (words < endp)
     {
       uint32_t tm;
@@ -419,6 +422,8 @@ sha256_process_block (const void *buffer, size_t len, struct sha256_ctx *ctx)
       f = ctx->state[5] += f;
       g = ctx->state[6] += g;
       h = ctx->state[7] += h;
+
+      on_sha256_block_process_iter(num_iters++, ctx);
     }
 }
 
diff --git a/lib/sha256.h b/lib/sha256.h
index a9d7abb8a2..ae16fe9929 100644
--- a/lib/sha256.h
+++ b/lib/sha256.h
@@ -26,6 +26,7 @@
 # include <stdio.h>
 # include <stdint.h>
 
+#undef HAVE_OPENSSL_SHA256
 # if HAVE_OPENSSL_SHA256
 #  ifndef OPENSSL_API_COMPAT
 #   define OPENSSL_API_COMPAT 0x10101000L /* FIXME: Use OpenSSL 1.1+ API.  */
